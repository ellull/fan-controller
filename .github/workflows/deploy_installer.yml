name: Deploy web installer

on:
  # Runs when a release is prereleased or released
  release:
    types:
      - prereleased
      - released

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    name: Deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Checkout
        uses: actions/checkout@v3
  
      - name: Download release assets
        uses: duhow/download-github-release-assets@v1.1.1
        with:
          tag: ${{ github.event.release.tag_name }}
          files: firmwares.zip

      - name: Unzip firmwares
        run: |
          unzip firmwares.zip -d output/

      - name: Create manifest.json
        run: |
          jq -s '{"name": "Fan Controller", "version": "${{ github.event.release.tag_name }}", "home_assistant_domain": "esphome", "new_install_skip_erase": false, "builds":.}' output/*/manifest.json > output/manifest.json

      - name: Copy static files
        run: |
          cp -R docs/* output/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: output/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
