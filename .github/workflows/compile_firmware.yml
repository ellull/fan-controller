name: Compile Firmwares

on:
  pull_request:
    branches:
      - main
    paths:
      - firmware/*.yaml

  push:
    tags:
      - v*.*.*
    branches:
      - main
    paths:
      - firmware/*.yaml
  
  workflow_dispatch:
      
jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.files-array.outputs.files }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Find firmware files
        id: files-array 
        run: |
          files=$(echo -n "$(ls firmware/*.yaml)" | jq -Rcns 'input | . / "\n"')
          echo "files=$files" >> $GITHUB_OUTPUT
  
  build:
    name: Build firmware from ${{ matrix.file }}
    needs: [prepare]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        file: ${{ fromJson(needs.prepare.outputs.files) }}

    outputs:
      names: ${{ steps.firmware-build.outputs.name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build firmware
        uses: esphome/build-action@v1.8.0
        id: firmware-build
        with:
          yaml_file: ${{ matrix.file }}

      - name: Organize firmware
        run: |
          mkdir output/
          mv "${{ steps.firmware-build.outputs.name }}" output/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
        with:
          name: firmwares
          path: output

  results:
    name: All firmwares compiled
    if: ${{ always() }}
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Check firmware build
        run: |
          result="${{ needs.build.result }}"
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi

  create_release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: firmwares
          path: output

      - name: Zip firmwares
        run: |
          cd output
          zip -r -q firmwares.zip .
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            output/**/*.bin
            output/firmwares.zip
